{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","block","type","Blocks","value","options","Error","TitleBlock","tag","TextBlock","ColumnsBlock","res","ImageBlock","model","background","color","padding","image","Site","selectors","$el","document","querySelector","innerHTML","forEach","console","log","site","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","App","render","push"],"mappings":"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","file":"src.1f9cd8ac.js","sourceRoot":"..\\src","sourcesContent":["export const row = (content, styles) => {\r\nreturn `\r\n<div class=\"row\" style=\"${styles}\">${content}</div>\r\n`\r\n}\r\nexport const col = (content) => {\r\nreturn `\r\n<div class=\"col-sm\">${content}</div>\r\n`\r\n}\r\n\r\nexport function css(styles={}) {\r\n    if (typeof styles === 'string') return styles\r\n    const toString = key => `${key}: ${styles[key]}`\r\n   return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport function block(type) {\r\n    return `    \r\n    <form name=\"${type}\">\r\n        <h5>${type}</h5>\r\n        <div class=\"form-group\">\r\n            <input placeholder=\"value\" name=\"value\" class=\"form-control form-control-sm\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-sm\">Добавить</button>\r\n    </form>\r\n    `\r\n\r\n}","import {col, css, row} from \"../utils\";\r\n\r\nclass Blocks {\r\n    constructor(value, options) {\r\n        this.value=value;\r\n        this.options=options;\r\n    }\r\n    toHTML() {\r\n        throw new Error('Метод toHTML обязательно должен быть реализован')\r\n    }\r\n\r\n}\r\n\r\nexport class TitleBlock extends Blocks {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n    toHTML() {\r\n        const {tag = 'h1', styles} = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`), css(styles))\r\n    }\r\n}\r\n\r\nexport class TextBlock extends Blocks {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n    toHTML() {\r\n        return row(col(`<p>${this.value}</p>`))\r\n    }\r\n}\r\n\r\nexport class ColumnsBlock extends Blocks {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n    toHTML() {\r\n        const res = this.value.map(col).join('')\r\n        return row(res)\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends Blocks {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n    toHTML() {\r\n        return row(`<img src=${this.value} alt=\"some image\"/>`)\r\n    }\r\n}","import image from './assets/e55230d2770cc7f362a8318d464af171.png'\r\nimport {TextBlock, ColumnsBlock, ImageBlock, TitleBlock} from \"./classes/blocks\";\r\n\r\nexport const model = [\r\n\r\n    new TitleBlock('Конструктор сайтов на чистом JS', {\r\n        tag: 'h2',\r\n        styles: {\r\n            background: 'linear-gradient(to right, #ff0099, #493240)',\r\n            color: '#fff',\r\n            padding: '1.5rem',\r\n            'text-align': 'center',\r\n        }\r\n    }),\r\n\r\n    new TextBlock('here we go with some text'),\r\n\r\n    new ColumnsBlock([\r\n        '111111',\r\n        '222222',\r\n        '333333',\r\n    ]),\r\n\r\n    new ImageBlock(image),\r\n\r\n]","\r\nexport class Site {\r\n    constructor(selectors) {\r\n        this.$el = document.querySelector(selectors)\r\n    }\r\n\r\n    render(model) {\r\n        this.$el.innerHTML=''\r\n        model.forEach(block => {\r\n            console.log(block)\r\n            site.insertAdjacentHTML('beforeend', block.toHTML())\r\n        })\r\n    }\r\n\r\n}","import {block} from \"../utils\";\r\nimport {TextBlock, TitleBlock} from \"./blocks\";\r\n\r\nexport class Sidebar {\r\n    constructor(selectors, updateCallback) {\r\n        this.$el = document.querySelector(selectors)\r\n        this.update = updateCallback\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.$el.addEventListener('submit', this.add.bind(this))\r\n    }\r\n\r\n    get template() {\r\n        return [\r\n            block('title'),\r\n            block('text')\r\n        ].join('')\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault()\r\n\r\n        const type = event.target.name\r\n        const value = event.target.value.value\r\n        const styles = event.target.styles.value\r\n\r\n        const newBlock = type === 'text'\r\n        ? new TextBlock(value, {styles})\r\n        : new TitleBlock(value, {styles})\r\n\r\n        this.update(newBlock)\r\n        event.target.value.value=''\r\n        event.target.styles.value=''\r\n    }\r\n\r\n}","import {Site} from \"./site\";\r\nimport {model} from \"../model\";\r\nimport {Sidebar} from \"./sidebar\";\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(this.model)\r\n\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n\r\n        new Sidebar('#panel', updateCallback)\r\n    }\r\n\r\n}\r\n\r\n","import {model} from './model'\r\nimport './styles/main.css'\r\nimport {App} from \"./classes/app\";\r\n\r\nnew App(model)"]}